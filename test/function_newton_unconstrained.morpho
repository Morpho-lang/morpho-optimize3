// Test Newton's method on a poorly scaled quadratic

import optimize3
import "quadratic.morpho"

var f = Quadratic([1.3, -0.5, 0.9, 1.2, 5], [1,5,0.1,3,0.1]).func() 

var adapt = FunctionAdapter(f, start=Matrix(5))

var _OptNoHess = Error("OptNoHess", "This method requires a hessian.")

class NewtonController is LineSearchController {
  searchdirection() {
    super.searchdirection()
    
    var H = self.adapter.hessian() 
    if (!H) _OptNoHess.throw("NewtonController can't use ${self.adapter.clss()} because it doesn't provide a hessian.") 

    self._direction = self._direction/H // direction was already -grad from superclass
  }
}

var control = NewtonController(adapt)
control.optimize(1000)

print adapt.get()

print adapt.hessian().eigenvalues() 
