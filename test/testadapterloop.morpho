import optimize 
import meshtools 
import optimizationadapter

// Simple gradient descent example
var m = LineMesh(fn (t) [2*cos(t),sin(t)], -Pi...Pi:Pi/10, closed=true)

var problem = OptimizationProblem(m)

var ll = Length() 
problem.addenergy(ll)

var la = AreaEnclosed() 
problem.addconstraint(la)

var adapt = MeshAdapter(problem, m)

var p = adapt.get() 

print "Iteration ${0}: ${adapt.value()}, ${adapt.constraintvalue()[0]}"
for (iter in 1..10) {
  var grad = adapt.gradient() 
  var cgrad = adapt.constraintgradient()[0]
  grad -= cgrad.inner(grad)*cgrad/cgrad.inner(cgrad)

  p -= 0.1*grad
  adapt.set(p)
  print "Iteration: ${iter}: ${adapt.value()}, ${adapt.constraintvalue()[0]}"
}
