// Test conjugate gradient on a poorly scaled quadratic

import optimizationadapter
import optimizationcontroller

// Constructs a quadratic function with given solution and scale factors
class Quadratic {
    init (soln, scale) {
        self.soln = soln 
        self.scale = scale 
    }

    func() { // Return the function
        fn f(...x) {
            var val = 0 
            for (x, k in x) {
                val+=self.scale[k]*(x - self.soln[k])^2
            }
            return val 
        }

        return f
    }
}

var f = Quadratic([1.3, -0.5, 0.9, 1.2, 5], [1,5,0.1,3,0.1]).func() 

var adapt = FunctionAdapter(f, start=Matrix(5))

var control = ConjugateGradientController(adapt)

control.optimize(1000)

print adapt.get()
